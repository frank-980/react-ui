[{"F:\\react\\ts-react\\src\\App.tsx":"1","F:\\react\\ts-react\\src\\index.tsx":"2","F:\\react\\ts-react\\src\\components\\hello.tsx":"3","F:\\react\\ts-react\\src\\components\\like.tsx":"4","F:\\react\\ts-react\\src\\components\\loaddata.tsx":"5","F:\\react\\ts-react\\src\\hooks\\useGetData.tsx":"6","F:\\react\\ts-react\\src\\reportWebVitals.ts":"7","F:\\react\\ts-react\\src\\components\\Button\\button.tsx":"8","F:\\react\\ts-react\\src\\components\\Icon\\index.tsx":"9","F:\\react\\ts-react\\src\\site\\layout\\content\\Document.tsx":"10","F:\\react\\ts-react\\src\\site\\layout\\index.tsx":"11","F:\\react\\ts-react\\src\\site\\layout\\content\\content.tsx":"12","F:\\react\\ts-react\\src\\site\\layout\\content\\Brief.tsx":"13","F:\\react\\ts-react\\src\\site\\layout\\content\\Params.tsx":"14","F:\\react\\ts-react\\src\\site\\layout\\header.tsx":"15","F:\\react\\ts-react\\src\\site\\layout\\leftNav.tsx":"16","F:\\react\\ts-react\\src\\site\\layout\\footer.tsx":"17","F:\\react\\ts-react\\src\\site\\layout\\content\\demo\\CodePreview.tsx":"18","F:\\react\\ts-react\\src\\site\\pages\\Button.tsx":"19","F:\\react\\ts-react\\src\\site\\pages\\Index.tsx":"20","F:\\react\\ts-react\\src\\router\\index.js":"21","F:\\react\\ts-react\\src\\store\\index.js":"22","F:\\react\\ts-react\\src\\store\\route.js":"23","F:\\react\\ts-react\\src\\store\\screenWidth.js":"24","F:\\react\\ts-react\\src\\site\\layout\\hooks\\useScreenWidth.tsx":"25","F:\\react\\ts-react\\src\\components\\Table\\index.tsx":"26","F:\\react\\ts-react\\src\\site\\pages\\Select.tsx":"27","F:\\react\\ts-react\\src\\components\\Select\\index.tsx":"28","F:\\react\\ts-react\\src\\site\\pages\\Input.tsx":"29","F:\\react\\ts-react\\src\\components\\Input\\index.tsx":"30","F:\\react\\ts-react\\src\\site\\pages\\Icon.tsx":"31","F:\\react\\ts-react\\src\\site\\pages\\Grid.tsx":"32","F:\\react\\ts-react\\src\\components\\Grid\\index.tsx":"33","F:\\react\\ts-react\\src\\components\\Grid\\hook.tsx":"34","F:\\react\\ts-react\\src\\components\\Divider\\index.tsx":"35","F:\\react\\ts-react\\src\\site\\pages\\Divider.tsx":"36","F:\\react\\ts-react\\src\\site\\pages\\Checkbox.tsx":"37","F:\\react\\ts-react\\src\\site\\pages\\Radio.tsx":"38","F:\\react\\ts-react\\src\\components\\Checkbox\\index.tsx":"39","F:\\react\\ts-react\\src\\site\\pages\\Table.tsx":"40"},{"size":683,"mtime":1609397055244,"results":"41","hashOfConfig":"42"},{"size":780,"mtime":1609396630565,"results":"43","hashOfConfig":"42"},{"size":237,"mtime":1608714763623,"results":"44","hashOfConfig":"45"},{"size":539,"mtime":1609396835325,"results":"46","hashOfConfig":"42"},{"size":787,"mtime":1608885364827,"results":"47","hashOfConfig":"42"},{"size":441,"mtime":1608801627119,"results":"48","hashOfConfig":"42"},{"size":425,"mtime":1608710713517,"results":"49","hashOfConfig":"42"},{"size":1807,"mtime":1609730486829,"results":"50","hashOfConfig":"42"},{"size":973,"mtime":1610965962356,"results":"51","hashOfConfig":"42"},{"size":488,"mtime":1611110889131,"results":"52","hashOfConfig":"42"},{"size":2308,"mtime":1611109534376,"results":"53","hashOfConfig":"42"},{"size":2986,"mtime":1610961900875,"results":"54","hashOfConfig":"42"},{"size":302,"mtime":1611047264307,"results":"55","hashOfConfig":"42"},{"size":270,"mtime":1611110900626,"results":"56","hashOfConfig":"42"},{"size":836,"mtime":1609741792792,"results":"57","hashOfConfig":"42"},{"size":2864,"mtime":1611218410726,"results":"58","hashOfConfig":"42"},{"size":225,"mtime":1609235235769,"results":"59","hashOfConfig":"42"},{"size":1714,"mtime":1610959229414,"results":"60","hashOfConfig":"42"},{"size":10972,"mtime":1611219059106,"results":"61","hashOfConfig":"42"},{"size":187,"mtime":1609393347784,"results":"62","hashOfConfig":"42"},{"size":1687,"mtime":1611218299717,"results":"63","hashOfConfig":"42"},{"size":207,"mtime":1609404664239,"results":"64","hashOfConfig":"42"},{"size":302,"mtime":1609404563961,"results":"65","hashOfConfig":"42"},{"size":252,"mtime":1609409607386,"results":"66","hashOfConfig":"42"},{"size":457,"mtime":1609407449165,"results":"67","hashOfConfig":"42"},{"size":1258,"mtime":1611111122253,"results":"68","hashOfConfig":"42"},{"size":4770,"mtime":1611047460243,"results":"69","hashOfConfig":"42"},{"size":7938,"mtime":1610693946838,"results":"70","hashOfConfig":"42"},{"size":8237,"mtime":1611047454875,"results":"71","hashOfConfig":"42"},{"size":6553,"mtime":1610693999161,"results":"72","hashOfConfig":"42"},{"size":29587,"mtime":1611047469578,"results":"73","hashOfConfig":"42"},{"size":22883,"mtime":1611218881807,"results":"74","hashOfConfig":"42"},{"size":3205,"mtime":1611109887978,"results":"75","hashOfConfig":"42"},{"size":3949,"mtime":1611050431227,"results":"76","hashOfConfig":"42"},{"size":827,"mtime":1611052617428,"results":"77","hashOfConfig":"42"},{"size":5968,"mtime":1611053041644,"results":"78","hashOfConfig":"42"},{"size":9832,"mtime":1611218838793,"results":"79","hashOfConfig":"42"},{"size":4768,"mtime":1611123827454,"results":"80","hashOfConfig":"42"},{"size":4704,"mtime":1611210896330,"results":"81","hashOfConfig":"42"},{"size":4189,"mtime":1611218602238,"results":"82","hashOfConfig":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"ng4blb",{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wgtqzz",{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"85"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"85"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"85"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"85"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"156","usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"85"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"85"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\react\\ts-react\\src\\App.tsx",[],["181","182"],"F:\\react\\ts-react\\src\\index.tsx",["183"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './store'\ninterface Ir{\n  isShow:boolean;\n}\nconst store = createStore(reducer);\nReactDOM.render(\n  \n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","F:\\react\\ts-react\\src\\components\\hello.tsx",[],"F:\\react\\ts-react\\src\\components\\like.tsx",["184","185"],"F:\\react\\ts-react\\src\\components\\loaddata.tsx",["186"],"F:\\react\\ts-react\\src\\hooks\\useGetData.tsx",["187","188"],"import {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nconst useGetData = (url:string,deps:any[]=[]):any=>{\r\n    const [load,setLoading] = useState(false)\r\n    const [data,setData] = useState<any>({})\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        axios.get(url).then(res=>{\r\n            setData(res.data)\r\n            setLoading(false)\r\n        })\r\n    },deps)\r\n    return [ data, load ]\r\n}\r\nexport default useGetData",["189","190"],"F:\\react\\ts-react\\src\\reportWebVitals.ts",[],"F:\\react\\ts-react\\src\\components\\Button\\button.tsx",["191"],"import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {ThemeContext} from '../../App';\r\nimport Icon from '../Icon'\r\ninterface Ibutton{\r\n    type?:string;\r\n    size?:string;\r\n    disabled?:boolean;\r\n    shape?:string;\r\n    ghost?:boolean;\r\n    block?:boolean;\r\n    children?:React.ReactNode;\r\n    onClick?: any;\r\n    style?:any;\r\n    danger?:boolean;\r\n    loading?:boolean;\r\n}\r\n\r\nconst Button:React.FC<Ibutton> = (props)=>{\r\n    const {\r\n        type='default',\r\n        size='normal',\r\n        disabled=false,\r\n        ghost = false,\r\n        block=false,\r\n        shape,\r\n        children,\r\n        style,\r\n        danger=false,\r\n        loading=false,\r\n        /** if we extract items here, we dont need use omit.js */\r\n        // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\r\n        ...rest\r\n      } = props;\r\n    const theme = React.useContext(ThemeContext)\r\n    const perfixCls = theme(\"btn\")\r\n    const classes = classNames(perfixCls, {\r\n        [`${perfixCls}-${type}`]:type,\r\n        [`${perfixCls}-${size}`]:size,\r\n        [`${perfixCls}-${shape}`]:shape,\r\n        [`${perfixCls}-disabled`]:disabled,\r\n        [`${perfixCls}-block`]:block,\r\n        [`${perfixCls}-ghost`]:ghost,\r\n        [`${perfixCls}-danger`]:danger,\r\n    })\r\n    const handleClick = (e:any)=>{\r\n        if(props.disabled) return \r\n        const { onClick } = props;\r\n        if(onClick){\r\n            onClick(e)\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes} onClick={(e)=>handleClick(e)} style={style}>\r\n            {\r\n            loading\r\n                ? <Icon icon=\"icon-loading\" style={{marginRight:\"8px\"}} spin/>\r\n                : \"\"\r\n            }\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Button","F:\\react\\ts-react\\src\\components\\Icon\\index.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\content\\Document.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\index.tsx",["192","193","194","195"],"import React,{useState,useRef,useEffect} from 'react';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux';\r\nimport routeInfo from './hooks/routeInfo'\r\nimport useScreenWidth from './hooks/useScreenWidth'\r\nimport Header from './header'\r\nimport LeftNav from './leftNav'\r\nimport Footer from './footer'\r\nimport {ISiteProps,ISiteState} from '../interface/site'\r\n\r\nenum route {\"/404\",\"/button\", \"/icon\", \"/divider\"=34,\"/grid\", \"/select\",\"/list\",\"/input\", Thu, Fri, Sat};\r\n\r\nconst Site:React.FC<ISiteProps> = (props:ISiteProps)=>{\r\n    const {isShow,changeToAny,children,location,width,setWidth} = props\r\n    /* current router change */\r\n        const Active:number = parseInt(route[location.pathname])\r\n        const currentLocation = location.pathname\r\n    /* screen size change */\r\n        window.onresize=function(){  \r\n            setWidth(window.innerWidth)\r\n        }\r\n        const dynStyle = useScreenWidth(width,[width])\r\n\r\n    /* css transition change */\r\n        const isFirst = useRef(true)\r\n        useEffect(()=>{\r\n            if(isFirst.current){\r\n                isFirst.current=false\r\n                return\r\n            }\r\n            changeToAny(\"changeToTrue\")\r\n        },[children])\r\n    /* end */\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Header/>\r\n            <div className=\"main container\">\r\n                <LeftNav routeActive={currentLocation} changeToAny={changeToAny} width={dynStyle.width}/>\r\n                <div className=\"contentbar\" style={{padding:dynStyle.padding}}>\r\n                    <CSSTransition in={isShow} timeout={1000} classNames=\"star\">\r\n\r\n                            {children}\r\n\r\n                    </CSSTransition>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state:ISiteState) {\r\n    return {\r\n      isShow: state.routeInfo.isShow,\r\n      width:state.screenWidth.width\r\n    }\r\n  }\r\nfunction mapDispatchToProps(dispatch:any) {\r\n    return {\r\n        changeToAny: (status:boolean) => {\r\n            dispatch({type:status})\r\n        },\r\n        setWidth:(width:number)=>{\r\n            dispatch({type:\"setWidth\",payload:{width}})\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Site)","F:\\react\\ts-react\\src\\site\\layout\\content\\content.tsx",["196","197","198"],"import React,{useState,useEffect} from 'react';\r\nimport CodePreview from './demo/CodePreview'\r\nimport {Icontent} from '../../interface/document'\r\ninterface IDoc{\r\n    content:Icontent[];\r\n}\r\nconst Content:React.FC<IDoc> = (props:IDoc)=>{\r\n    const {content}=props\r\n    const cLength = content.length\r\n    if(cLength<1) return (<div></div>)\r\n    if(cLength===1){\r\n        return (\r\n            <div className=\"codeWrap\">\r\n                <CodePreview {...content[0]}/>\r\n            </div> \r\n        )   \r\n    }\r\n    let left:Icontent[]=[];\r\n    let right:Icontent[]=[];\r\n    const middle = cLength % 2 ==0 ? cLength/2 : Math.floor(cLength/2) + 1\r\n    for(let i=0;i<middle;i++){\r\n        left=[...left,content[i]]\r\n    }\r\n    for(let i=0;i<cLength-middle;i++){\r\n        right=[...right,content[i+middle]]\r\n    }\r\n    if(content[0].col===1){\r\n        return (\r\n            <div>\r\n                <div className=\"codeWrap\" style={{width:\"100%\"}}>\r\n                    {content.map((item:Icontent)=>{\r\n                        return (<CodePreview key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n            </div>\r\n        ) \r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"codeWrap\">\r\n                {left.map((item:Icontent)=>{\r\n                    return (<CodePreview key={item.id} {...item}/>)\r\n                })}\r\n            </div> \r\n            <div className=\"codeWrap\" style={{paddingRight:\"0px\"}}>\r\n                {right.map((item:Icontent)=>{\r\n                    return (<CodePreview key={item.id} {...item}/>)\r\n                })}\r\n            </div> \r\n        </div>\r\n    ) \r\n}\r\n/*class Content extends React.Component<IDoc> {\r\n    constructor(props:IDoc){\r\n        super(props)\r\n    }\r\n    render(){\r\n        const {content}=this.props\r\n        const cLength = content.length\r\n        if(cLength<1) return (<div></div>)\r\n        if(cLength===1){\r\n            return (\r\n                <div className=\"codeWrap\">\r\n                    <CodePreview {...content[0]}/>\r\n                </div> \r\n            )   \r\n        }\r\n        let left:Icontent[]=[];\r\n        let right:Icontent[]=[];\r\n        const middle = cLength % 2 ==0 ? cLength/2 : Math.floor(cLength/2) + 1\r\n        for(let i=0;i<middle;i++){\r\n            left=[...left,content[i]]\r\n        }\r\n        for(let i=0;i<cLength-middle;i++){\r\n            right=[...right,content[i+middle]]\r\n        }  \r\n        return (\r\n            <div>\r\n                <div className=\"codeWrap\">\r\n                    {left.map((item:Icontent)=>{\r\n                        return (<CodePreview key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n                <div className=\"codeWrap\" style={{paddingRight:\"0px\"}}>\r\n                    {right.map((item:Icontent)=>{\r\n                        return (<CodePreview key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n            </div>\r\n        ) \r\n    }\r\n}*/\r\nexport default Content","F:\\react\\ts-react\\src\\site\\layout\\content\\Brief.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\content\\Params.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\header.tsx",["199","200"],"import React from 'react';\r\nimport Icon from \"../../components/Icon\"\r\nimport logo from \"../../logo.png\"\r\nconst Header:React.FC = ()=>{\r\n    return (\r\n        <header id=\"header\">\r\n            <div className=\"header-row\">\r\n                <a id=\"logoBox\">\r\n                    <img className=\"logo_img\" src={logo}/>\r\n                    <span>Sxd Design</span>\r\n                </a>\r\n                <div id=\"searchBox\">\r\n                    <Icon icon=\"icon-search\" style={{paddingRight:\"16px\"}}/>\r\n                    <input type=\"text\" placeholder=\"搜索\"/>\r\n                </div>\r\n                <div id=\"otherBox\">\r\n                    <div className=\"version\">Version : 0.0.1</div>\r\n                    <div className=\"git\"> </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    ) \r\n}\r\nexport default Header","F:\\react\\ts-react\\src\\site\\layout\\leftNav.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\footer.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\content\\demo\\CodePreview.tsx",[],"F:\\react\\ts-react\\src\\site\\pages\\Button.tsx",[],"F:\\react\\ts-react\\src\\site\\pages\\Index.tsx",["201"],"import React,{useState} from 'react'\r\n\r\nconst Index:React.FC = ()=>{\r\n    \r\n    return (\r\n        <div className=\"contentInner\">\r\n        123\r\n\r\n    </div>\r\n    )\r\n}\r\nexport default Index","F:\\react\\ts-react\\src\\router\\index.js",["202"],"F:\\react\\ts-react\\src\\store\\index.js",[],["203","204"],"F:\\react\\ts-react\\src\\store\\route.js",[],"F:\\react\\ts-react\\src\\store\\screenWidth.js",[],"F:\\react\\ts-react\\src\\site\\layout\\hooks\\useScreenWidth.tsx",["205","206"],"import {useState,useEffect} from 'react'\r\nconst useScreenWidth = (width:number,deps:any[]=[]):any=>{\r\n    const [dynStyle,setdynStyle] = useState({width:\"20%\",padding:\"50px 0 50px 20%\"})\r\n    useEffect(()=>{\r\n        if(width<=750){\r\n            setdynStyle({width:\"0\",padding:\"50px 0 50px 0\"})\r\n        }else{\r\n            setdynStyle({width:\"20%\",padding:\"50px 0 50px 20%\"})\r\n        }\r\n    },deps)\r\n    return  dynStyle \r\n}\r\nexport default useScreenWidth","F:\\react\\ts-react\\src\\components\\Table\\index.tsx",[],"F:\\react\\ts-react\\src\\site\\pages\\Select.tsx",["207","208","209","210","211"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport {Select,Option} from '../../components/Select'\r\n\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nconst ButtonPage:React.FC = ()=>{\r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Select选择器</h1>\r\n        <p>下拉选择器。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。</p>\r\n                </li>\r\n                <li>\r\n                    <p>当选项少时（少于 5 项），建议直接将选项平铺，使用 Radio 是更好的选择。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const [loading,setLoading] = useState(false)\r\n    const valueChange=(val:any)=>{\r\n        console.log(val)\r\n    }\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Select defaultValue=\"a10\">\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"单选，基本使用。\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select defaultValue=\"a10\">\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"多选\",\r\n            description:\"多选，从已有条目中选择\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n    ];\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'mode',\r\n          brief: \"设置 Select 的模式为多选\",\r\n          type: 'string',\r\n          options: 'multiple',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'defaultValue',\r\n          brief: \"指定默认选中的条目\",\r\n          type: 'string | string[] number | number[]',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const data2=[\r\n        {\r\n          key:1,\r\n          arguments: 'value',\r\n          brief: \"默认根据此属性值进行筛选\",\r\n          type: 'string | number',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'label',\r\n          brief: \"选中该 Option 后，Select 的 title\",\r\n          type: 'string',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Select 参数</h2>\r\n            <Table data={data} columns={columns} />\r\n            <h2>Option 参数</h2>\r\n            <Table data={data2} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default ButtonPage","F:\\react\\ts-react\\src\\components\\Select\\index.tsx",["212","213","214","215","216","217"],"import React,{useState, useEffect, useRef} from 'react';\r\nimport classNames from 'classnames';\r\nimport Icon from '../Icon'\r\ninterface ISelect{\r\n    mode?:string;\r\n    defaultValue?:any;\r\n    clearable?:boolean;\r\n    children?:any;\r\n    childrenArray?:any;\r\n    style?:object;\r\n    onChange?:any;\r\n}\r\ninterface IOption{\r\n    children:any;\r\n    value?:any;\r\n    label?:any;\r\n}\r\ninterface ISelectInfo{\r\n    key:string;\r\n    isSelect:boolean;\r\n    value:any;\r\n    label:any;\r\n    \r\n}\r\n//util工具方法\r\nconst getInnerText = (child:any)=>{\r\n    if(typeof child.children==='string'){\r\n        return child.children\r\n    }else{\r\n        return child.value\r\n    }\r\n}\r\nconst isSelect = (dv:any,cv:any)=>{\r\n    if(typeof dv===\"string\"){\r\n        return dv===cv\r\n    }else if(typeof dv===\"object\"){\r\n        return dv.indexOf(cv)>-1\r\n    }\r\n    return false\r\n}\r\n\r\nconst Option:React.FC<IOption>=(props:IOption)=>{\r\n    return (\r\n        <div>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\nconst Select:React.FC<ISelect> = (props)=>{\r\n    const { children=[], onChange=()=>{}, clearable, defaultValue=[], mode, style } = props;\r\n    // init\r\n    const setInitData = ()=>{\r\n        \r\n        if(!children || children.length<1){\r\n            return []\r\n        }\r\n        let initData:ISelectInfo[]=[]\r\n        for(let i=0;i<children.length;i++){\r\n            initData.push({\r\n                key:children[i].props.key || children[i].props.value,\r\n                isSelect:isSelect(defaultValue,children[i].props.value),\r\n                label:children[i].props.label || getInnerText(children[i].props) || \"\",\r\n                value:children[i].props.value,\r\n            })\r\n        }\r\n        return initData\r\n    }\r\n    //usestate\r\n    const [isShowOption,setShowStatus] = useState(false)\r\n    const [iconRotate,setIconRotate] = useState({ transform:\"rotate(0deg)\" })\r\n    const [top,setTop] = useState(40)\r\n    const [selectedInfo,setselectedInfo] = useState<ISelectInfo[]>( setInitData() )\r\n    //点击事件监听\r\n    const selectRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        if(mode!==\"multiple\"){\r\n            removeListener()\r\n        }\r\n        if(selectRef.current!==e.target && !selectRef.current.contains(e.target||\"\")){\r\n            setShowStatus(false) \r\n            removeListener()\r\n        }\r\n    }\r\n    const addListener = ()=>{\r\n        window.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener('click', fn, true);\r\n    }\r\n\r\n    let flag=useRef(true)\r\n    useEffect(()=>{\r\n        let doc:HTMLElement | null = document.getElementById(\"calcHeight\")\r\n        let height:number = doc?doc.clientHeight:32\r\n        setTop(10+height)\r\n        if(flag.current){\r\n            flag.current=false\r\n            return\r\n        }\r\n        if(mode===\"multiple\"){\r\n            let emitVal:any[]=[]\r\n            selectedInfo.map((item:ISelectInfo)=>{\r\n                if(item.isSelect) emitVal.push(item.value)\r\n            })\r\n            onChange(emitVal)\r\n        }else{\r\n            selectedInfo.map((item:ISelectInfo)=>{\r\n                if(item.isSelect) onChange(item.value)\r\n            })\r\n            setShowStatus(false)\r\n        }\r\n    },[selectedInfo])\r\n    //onclick事件： 清空，下拉，选择\r\n    const handleClear = (e:any)=>{\r\n        e.stopPropagation();\r\n        setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n            return {...info,isSelect:false}\r\n        }))\r\n    }\r\n    const dropDown = ()=>{\r\n        addListener();\r\n        setShowStatus(!isShowOption)\r\n    }\r\n    const multipleClick = (item:any,e:any)=>{\r\n        e.stopPropagation()\r\n        if(mode===\"multiple\"){ \r\n            //此处更新为异步\r\n            setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n                if(info.key===(item.key || item.value)){  \r\n                    return {...info,isSelect:!info.isSelect}\r\n                }\r\n                return info\r\n            }))\r\n        }else{\r\n            setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n                if(info.key===(item.key || item.value)){\r\n                    \r\n                    return {...info,isSelect:true}\r\n                }\r\n                return {...info,isSelect:false}\r\n            }))\r\n        }\r\n    }\r\n    //展示框\r\n    const displayArea = ()=>{\r\n        const selectedClass=classNames(\"selectedText\",{\"selectedText-focus\":isShowOption})\r\n        const dropDownIcon = mode!==\"multiple\"\r\n            ?(<Icon className=\"suffixIcon\" style={isShowOption?{transform:\"rotate(-180deg)\"}:{transform:\"rotate(0deg)\"}} icon=\"icon-arrow-down-bold\"/>)\r\n            :\"\";\r\n        const clearIcon = clearable && selectedInfo.some((item:ISelectInfo)=>item.isSelect)\r\n            ?(<span className=\"clearIcon\" onClick={(e)=>handleClear(e)}>\r\n                <Icon style={{fontSize:\"14px\"}} icon=\"icon-close-bold\"/>\r\n            </span>)\r\n            :\"\";\r\n        const displayInline =(item:any)=>{\r\n            if(item.isSelect){\r\n                return mode===\"multiple\"\r\n                    ?(\r\n                        <div className=\"multipleItem\" key={item.key}>\r\n                            <span className=\"item-label\">\r\n                                {item.label}\r\n                            </span>\r\n                            <span onClick={(e)=>multipleClick(item,e)}>\r\n                                <Icon className=\"item-icon\" icon=\"icon-close-bold\"/>\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                    :(\r\n                        <div style={{paddingRight:\"12px\"}} key={item.key}>\r\n                            {item.label}\r\n                        </div>\r\n                    )\r\n            }\r\n            return \"\"\r\n        } \r\n        return (\r\n            <div className={selectedClass} onClick={()=>dropDown()}>\r\n                <div className=\"multipleBox\" id={isShowOption?\"calcHeight\":\"\"}>\r\n                    {selectedInfo.map((item:ISelectInfo)=>{\r\n                        return displayInline(item)\r\n                    })}\r\n                </div>\r\n                {dropDownIcon}\r\n                {clearIcon}\r\n            </div>\r\n        )\r\n    }\r\n    //列表\r\n    const OptionList = ()=>{\r\n        if(isShowOption){\r\n            if(children && children.length>0){\r\n                const row = (info:any)=>{\r\n                    const optionsClasses = classNames(\"optionItem\",{\"optionItem-selected\":info.isSelect})\r\n                    const iconArea = info.isSelect?(<div><Icon style={{color:\"#1890ff\"}} icon=\"icon-select\"/></div>):\"\"\r\n                    return mode===\"multiple\"\r\n                        ?(<div className={optionsClasses} key={info.key} onClick={(e)=>multipleClick(info,e)}>\r\n                            <div style={{flex:\"auto\",userSelect: \"none\"}}>\r\n                                {info.label}\r\n                            </div>\r\n                            {iconArea}\r\n                        </div>)\r\n                        :(<div className={optionsClasses} key={info.key} onClick={(e)=>multipleClick(info,e)}>\r\n                            {info.label}\r\n                        </div>)\r\n                }\r\n                return (\r\n                    <div className=\"selectOptions\" style={{top:top+'px'}}>\r\n                        {selectedInfo.map((info:ISelectInfo)=>{\r\n                            {return row(info)}\r\n                        })}\r\n                    </div>\r\n                )\r\n            }else{\r\n                return (\r\n                    <div className=\"selectOptions\">\r\n                        <div>no data</div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return \"\"\r\n    }\r\n    return (\r\n        <div className=\"select\"  style={style} ref={selectRef}>\r\n            {displayArea()}\r\n            {OptionList()}\r\n        </div>\r\n    )\r\n}\r\nexport {Select,Option}","F:\\react\\ts-react\\src\\site\\pages\\Input.tsx",[],"F:\\react\\ts-react\\src\\components\\Input\\index.tsx",["218","219","220","221","222","223"],"import React,{useState, useEffect,useRef} from 'react'\r\nimport classNames from 'classnames';\r\nimport Icon from '../Icon'\r\nimport {Select} from '../Select'\r\nimport { clear } from 'console';\r\ninterface IInput  {\r\n    size?:string;\r\n    style?:object;\r\n    placeholder?:string;\r\n    value?:any;\r\n    defaultValue?:any;\r\n    prefix?:any;\r\n    suffix?:any;\r\n    addonBefore?:any;\r\n    addonAfter?:any;\r\n    clearable?:boolean;\r\n    children?:any;\r\n    //事件\r\n    onChange?:any;\r\n    onClick?:any;\r\n}\r\nconst Input:React.FC<IInput> = (props:IInput)=>{\r\n    const {style,size=\"default\",placeholder=\"\", value=\"\",defaultValue=\"\", prefix=\"\", suffix=\"\", addonBefore, addonAfter, clearable=false, onChange=()=>{},onClick=()=>{}} = props\r\n    const [valueInner,setValue] = useState(value)\r\n    const handleChange = (e:any)=>{\r\n        let value = e.target.value\r\n        setValue(value)\r\n        onChange(value)\r\n    }\r\n    \r\n    const renderInput = ()=>{\r\n        return (\r\n            <input className=\"sxd-input\" onClick={()=>{onClick()}} placeholder={placeholder} value={valueInner} onChange={(e)=>handleChange(e)}/>\r\n        )\r\n    }\r\n    const [isFocus,setFocus] = useState(false)\r\n    const classes = classNames(\"sxd-input-wrap\",{\r\n        [`sxd-wrap-${size}`]:size,\r\n        [\"sxd-input-wrap-focus\"]:isFocus\r\n    })\r\n    const inputWrapRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        removeListener()\r\n        setFocus(false) \r\n        \r\n    }\r\n    const addListener = ()=>{\r\n        document.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        document.removeEventListener('click', fn, true);\r\n    }\r\n    const wrapFocus = ()=>{\r\n        addListener();\r\n        setFocus(true)\r\n    }\r\n    const beforeInfo = ()=>{\r\n        if(typeof addonBefore==='string'){\r\n            return (<span className=\"groupAdd\">{addonBefore}</span>)\r\n        }\r\n        return addonBefore\r\n    }\r\n    const afterInfo = ()=>{\r\n        if(typeof addonAfter==='string'){\r\n            return (<span className=\"groupAdd\">{addonAfter}</span>)\r\n        }\r\n        return addonAfter\r\n    }\r\n    const wrapInput = ()=>{\r\n        if(size!==\"default\" || prefix!==\"\" || suffix!==\"\" || addonBefore!==\"\" || addonAfter!==\"\")\r\n        {\r\n            return (\r\n                <div className=\"groupWrap\">\r\n                    {beforeInfo()}\r\n                    <div className={classes}  style={style} onClick={()=>{wrapFocus()}} ref={inputWrapRef}>\r\n                        {prefix}\r\n                        \r\n                        {renderInput()}\r\n                        \r\n                        {clearable && valueInner!==\"\"?(\r\n                            <Icon \r\n                            icon=\"icon-close-bold\" \r\n                            style={{cursor:\"pointer\"}}\r\n                            onClick={()=>setValue(\"\")}\r\n                            />\r\n                            ):\"\"}\r\n                        {suffix}\r\n                    </div>\r\n                    {afterInfo()}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes}  style={style} onClick={()=>{wrapFocus()}} ref={inputWrapRef}>\r\n                {renderInput()}\r\n            </div>\r\n        )\r\n    }\r\n    return wrapInput()\r\n}\r\n\r\n\r\ninterface IOptions  {\r\n    key?:any;\r\n    value:number|string;\r\n    label?:number|string;\r\n}\r\ninterface IFilterOptions{\r\n    key:any;\r\n    isShow:boolean;\r\n    value:number|string;\r\n    label:number|string;\r\n}\r\ninterface IAutoComplete  {\r\n    defaultValue?:number|string;\r\n    options:IOptions[];\r\n    placeholder?:string;\r\n    onChange?:any;\r\n    style?:object;\r\n}\r\nconst AutoComplete:React.FC<IAutoComplete> = (props:IAutoComplete)=>{\r\n    const { defaultValue=\"\",style,placeholder,options, onChange=()=>{}} = props\r\n    const [inputVal,setInputVal] = useState(defaultValue)\r\n    const inputWrapRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        removeListener()\r\n        if(inputWrapRef.current!==e.target && !inputWrapRef.current.contains(e.target||\"\")){\r\n            setShowStatus(false)  \r\n        }\r\n    }\r\n    const addListener = ()=>{\r\n        document.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        document.removeEventListener('click', fn, true);\r\n    }\r\n    const initData = ()=>{\r\n        if(!options || options.length<1){\r\n            return []\r\n        }\r\n        let initData:IFilterOptions[]=[]\r\n        for(let i=0;i<options.length;i++){\r\n            if(!options[i].key) options[i].key=options[i].value\r\n            initData.push({\r\n                key:options[i].key,\r\n                isShow:true,\r\n                label:options[i].label || options[i].value,\r\n                value:options[i].value,\r\n            })\r\n        }\r\n        return initData\r\n    }\r\n    const [filterOptions,setOptions] = useState(initData())\r\n    const [isShowOption,setShowStatus] = useState(false)\r\n    const handleChange = (v:number|string)=>{\r\n        onChange(v)\r\n        setInputVal(v)\r\n        setOptions(filterOptions.map((item:IFilterOptions)=>{\r\n            return {...item,isShow:item.value.toString().indexOf(v.toString())>-1}\r\n        }))\r\n    }\r\n    const handleClick = (item:IFilterOptions,e:any)=>{\r\n        e.stopPropagation()\r\n        handleChange(item.value)\r\n        setShowStatus(false)\r\n        removeListener()\r\n    }\r\n    const OptionList = ()=>{\r\n        if(isShowOption && filterOptions.length>0 && filterOptions.some((item:IFilterOptions)=>item.isShow)){\r\n            return (\r\n                <div className=\"selectOptions\" style={{top:'35px'}}>\r\n                    {filterOptions.filter((item:IFilterOptions)=>{\r\n                        return item.isShow\r\n                    }).map((info:IFilterOptions)=>{\r\n                        return (\r\n                            <div className=\"optionItem\" key={info.key} onClick={(e)=>handleClick(info,e)}>\r\n                                {info.label}\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        return \"\"\r\n    }\r\n    return (\r\n        <div className=\"select\" ref={inputWrapRef}>\r\n            <input \r\n            className=\"sxd-input\" \r\n            placeholder={placeholder}\r\n            value={inputVal} \r\n            onChange={(e:any)=>{handleChange(e.target.value)}} \r\n            onClick={()=>{setShowStatus(true);addListener()}} \r\n            />\r\n            {OptionList()}\r\n        </div>\r\n        )\r\n}\r\nexport {Input,AutoComplete}","F:\\react\\ts-react\\src\\site\\pages\\Icon.tsx",["224","225","226","227","228"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nconst ButtonPage:React.FC = ()=>{\r\n    const brief:IBrief={\r\n      introduce:<>\r\n        <h1>Icon 图标</h1>\r\n        <p>提供了一套常用的图标集合。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n          <p>用图标展示一些信息。</p>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Icon icon=\"icon-search\"/>\r\n                    <Icon icon=\"icon-select-bold\"/>\r\n                    <Icon icon=\"icon-delete-filling\"/>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"基本使用\",\r\n            code:\r\n`\r\nimport {Icon} from 'sxdui'\r\n<Icon icon=\"icon-search\"/>\r\n<Icon icon=\"icon-select-bold\"/>\r\n<Icon icon=\"icon-delete-filling\"/>\r\n`\r\n        },\r\n    ]\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'type',\r\n          brief: \"设置按钮类型\",\r\n          type: 'string',\r\n          options: 'primary | dashed | link | text | default',\r\n          default:\"default\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'size',\r\n          brief: \"设置按钮尺寸\",\r\n          type: 'large | middle | small',\r\n          default:\"middle\"\r\n        },\r\n        {\r\n          key:3,\r\n          arguments: 'ghost',\r\n          brief: \"是否启用幽灵按钮\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:4,\r\n          arguments: 'loading',\r\n          brief: \"是否加载中状态\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:5,\r\n          arguments: 'disabled',\r\n          brief: \"是否禁用状态\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:6,\r\n          arguments: 'shape',\r\n          brief: \"设置按钮形状\",\r\n          type: 'circle | round',\r\n          default:\"—\"\r\n        },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>图标集合</h2>\r\n            <div className=\"content font-className\">\r\n        <ul className=\"icon_lists dib-box\">\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-3column\"></span>\r\n            <div className=\"name\">\r\n              column-3\r\n            </div>\r\n            <div className=\"code-name\">.icon-3column\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-4\"></span>\r\n            <div className=\"name\">\r\n              column-4\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-4\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-add\"></span>\r\n            <div className=\"name\">\r\n              add\r\n            </div>\r\n            <div className=\"code-name\">.icon-add\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-add-circle\"></span>\r\n            <div className=\"name\">\r\n              add-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-add-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-adjust\"></span>\r\n            <div className=\"name\">\r\n              adjust\r\n            </div>\r\n            <div className=\"code-name\">.icon-adjust\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down\"></span>\r\n            <div className=\"name\">\r\n              arrow-down\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-ashbin\"></span>\r\n            <div className=\"name\">\r\n              ashbin\r\n            </div>\r\n            <div className=\"code-name\">.icon-ashbin\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right\"></span>\r\n            <div className=\"name\">\r\n              arrow-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-browse\"></span>\r\n            <div className=\"name\">\r\n              browse\r\n            </div>\r\n            <div className=\"code-name\">.icon-browse\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-bottom\"></span>\r\n            <div className=\"name\">\r\n              bottom\r\n            </div>\r\n            <div className=\"code-name\">.icon-bottom\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-back\"></span>\r\n            <div className=\"name\">\r\n              back\r\n            </div>\r\n            <div className=\"code-name\">.icon-back\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-bad\"></span>\r\n            <div className=\"name\">\r\n              bad\r\n            </div>\r\n            <div className=\"code-name\">.icon-bad\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-double-left\"></span>\r\n            <div className=\"name\">\r\n              arrow-double-left\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-double-left\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-left-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-left-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-left-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-double-right\"></span>\r\n            <div className=\"name\">\r\n              arrow-double-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-double-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-caps-lock\"></span>\r\n            <div className=\"name\">\r\n              caps-lock\r\n            </div>\r\n            <div className=\"code-name\">.icon-caps-lock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-camera\"></span>\r\n            <div className=\"name\">\r\n              camera\r\n            </div>\r\n            <div className=\"code-name\">.icon-camera\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-chart-bar\"></span>\r\n            <div className=\"name\">\r\n              chart-bar\r\n            </div>\r\n            <div className=\"code-name\">.icon-chart-bar\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-attachment\"></span>\r\n            <div className=\"name\">\r\n              attachment\r\n            </div>\r\n            <div className=\"code-name\">.icon-attachment\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-code\"></span>\r\n            <div className=\"name\">\r\n              code\r\n            </div>\r\n            <div className=\"code-name\">.icon-code\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-close\"></span>\r\n            <div className=\"name\">\r\n              close\r\n            </div>\r\n            <div className=\"code-name\">.icon-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-check-item\"></span>\r\n            <div className=\"name\">\r\n              check-item\r\n            </div>\r\n            <div className=\"code-name\">.icon-check-item\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-calendar\"></span>\r\n            <div className=\"name\">\r\n              calendar\r\n            </div>\r\n            <div className=\"code-name\">.icon-calendar\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-comment\"></span>\r\n            <div className=\"name\">\r\n              comment\r\n            </div>\r\n            <div className=\"code-name\">.icon-comment\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-vertical\"></span>\r\n            <div className=\"name\">\r\n              column-vertical\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-vertical\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-horizontal\"></span>\r\n            <div className=\"name\">\r\n              column-horizontal\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-horizontal\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-complete\"></span>\r\n            <div className=\"name\">\r\n              complete\r\n            </div>\r\n            <div className=\"code-name\">.icon-complete\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-chart-pie\"></span>\r\n            <div className=\"name\">\r\n              chart-pie\r\n            </div>\r\n            <div className=\"code-name\">.icon-chart-pie\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-cry\"></span>\r\n            <div className=\"name\">\r\n              cry\r\n            </div>\r\n            <div className=\"code-name\">.icon-cry\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-customer-service\"></span>\r\n            <div className=\"name\">\r\n              customer-service\r\n            </div>\r\n            <div className=\"code-name\">.icon-customer-service\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-delete\"></span>\r\n            <div className=\"name\">\r\n              delete\r\n            </div>\r\n            <div className=\"code-name\">.icon-delete\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-down\"></span>\r\n            <div className=\"name\">\r\n              direction-down\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-down\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-copy\"></span>\r\n            <div className=\"name\">\r\n              copy\r\n            </div>\r\n            <div className=\"code-name\">.icon-copy\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-cut\"></span>\r\n            <div className=\"name\">\r\n              cut\r\n            </div>\r\n            <div className=\"code-name\">.icon-cut\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-down-circle\"></span>\r\n            <div className=\"name\">\r\n              direction-down-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-down-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-right\"></span>\r\n            <div className=\"name\">\r\n              direction-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-up\"></span>\r\n            <div className=\"name\">\r\n              direction-up\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-up\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-left\"></span>\r\n            <div className=\"name\">\r\n              direction-left\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-left\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-download\"></span>\r\n            <div className=\"name\">\r\n              download\r\n            </div>\r\n            <div className=\"code-name\">.icon-download\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-elipsis\"></span>\r\n            <div className=\"name\">\r\n              elipsis\r\n            </div>\r\n            <div className=\"code-name\">.icon-elipsis\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-edit\"></span>\r\n            <div className=\"name\">\r\n              edit\r\n            </div>\r\n            <div className=\"code-name\">.icon-edit\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-eye-close\"></span>\r\n            <div className=\"name\">\r\n              eye-close\r\n            </div>\r\n            <div className=\"code-name\">.icon-eye-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-email\"></span>\r\n            <div className=\"name\">\r\n              email\r\n            </div>\r\n            <div className=\"code-name\">.icon-email\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-error\"></span>\r\n            <div className=\"name\">\r\n              error\r\n            </div>\r\n            <div className=\"code-name\">.icon-error\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-favorite\"></span>\r\n            <div className=\"name\">\r\n              favorite\r\n            </div>\r\n            <div className=\"code-name\">.icon-favorite\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file-common\"></span>\r\n            <div className=\"name\">\r\n              file-common\r\n            </div>\r\n            <div className=\"code-name\">.icon-file-common\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-fabulous\"></span>\r\n            <div className=\"name\">\r\n              fabulous\r\n            </div>\r\n            <div className=\"code-name\">.icon-fabulous\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file\"></span>\r\n            <div className=\"name\">\r\n              file\r\n            </div>\r\n            <div className=\"code-name\">.icon-file\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-folder-close\"></span>\r\n            <div className=\"name\">\r\n              folder-close\r\n            </div>\r\n            <div className=\"code-name\">.icon-folder-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-filter\"></span>\r\n            <div className=\"name\">\r\n              filter\r\n            </div>\r\n            <div className=\"code-name\">.icon-filter\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-good\"></span>\r\n            <div className=\"name\">\r\n              good\r\n            </div>\r\n            <div className=\"code-name\">.icon-good\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-hide\"></span>\r\n            <div className=\"name\">\r\n              hide\r\n            </div>\r\n            <div className=\"code-name\">.icon-hide\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-home\"></span>\r\n            <div className=\"name\">\r\n              home\r\n            </div>\r\n            <div className=\"code-name\">.icon-home\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file-open\"></span>\r\n            <div className=\"name\">\r\n              file-open\r\n            </div>\r\n            <div className=\"code-name\">.icon-file-open\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-link\"></span>\r\n            <div className=\"name\">\r\n              link\r\n            </div>\r\n            <div className=\"code-name\">.icon-link\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-lock\"></span>\r\n            <div className=\"name\">\r\n              lock\r\n            </div>\r\n            <div className=\"code-name\">.icon-lock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-menu\"></span>\r\n            <div className=\"name\">\r\n              menu\r\n            </div>\r\n            <div className=\"code-name\">.icon-menu\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-loading\"></span>\r\n            <div className=\"name\">\r\n              loading\r\n            </div>\r\n            <div className=\"code-name\">.icon-loading\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-help\"></span>\r\n            <div className=\"name\">\r\n              help\r\n            </div>\r\n            <div className=\"code-name\">.icon-help\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-modular\"></span>\r\n            <div className=\"name\">\r\n              modular\r\n            </div>\r\n            <div className=\"code-name\">.icon-modular\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-notification\"></span>\r\n            <div className=\"name\">\r\n              notification\r\n            </div>\r\n            <div className=\"code-name\">.icon-notification\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-mic\"></span>\r\n            <div className=\"name\">\r\n              mic\r\n            </div>\r\n            <div className=\"code-name\">.icon-mic\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-more\"></span>\r\n            <div className=\"name\">\r\n              more\r\n            </div>\r\n            <div className=\"code-name\">.icon-more\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-play\"></span>\r\n            <div className=\"name\">\r\n              play\r\n            </div>\r\n            <div className=\"code-name\">.icon-play\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-print\"></span>\r\n            <div className=\"name\">\r\n              print\r\n            </div>\r\n            <div className=\"code-name\">.icon-print\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-search\"></span>\r\n            <div className=\"name\">\r\n              search\r\n            </div>\r\n            <div className=\"code-name\">.icon-search\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-share\"></span>\r\n            <div className=\"name\">\r\n              share\r\n            </div>\r\n            <div className=\"code-name\">.icon-share\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-select\"></span>\r\n            <div className=\"name\">\r\n              select\r\n            </div>\r\n            <div className=\"code-name\">.icon-select\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-stop\"></span>\r\n            <div className=\"name\">\r\n              stop\r\n            </div>\r\n            <div className=\"code-name\">.icon-stop\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-success\"></span>\r\n            <div className=\"name\">\r\n              success\r\n            </div>\r\n            <div className=\"code-name\">.icon-success\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-smile\"></span>\r\n            <div className=\"name\">\r\n              smile\r\n            </div>\r\n            <div className=\"code-name\">.icon-smile\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-setting\"></span>\r\n            <div className=\"name\">\r\n              setting\r\n            </div>\r\n            <div className=\"code-name\">.icon-setting\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-time\"></span>\r\n            <div className=\"name\">\r\n              time\r\n            </div>\r\n            <div className=\"code-name\">.icon-time\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-top\"></span>\r\n            <div className=\"name\">\r\n              top\r\n            </div>\r\n            <div className=\"code-name\">.icon-top\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-unlock\"></span>\r\n            <div className=\"name\">\r\n              unlock\r\n            </div>\r\n            <div className=\"code-name\">.icon-unlock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-user\"></span>\r\n            <div className=\"name\">\r\n              user\r\n            </div>\r\n            <div className=\"code-name\">.icon-user\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-upload\"></span>\r\n            <div className=\"name\">\r\n              upload\r\n            </div>\r\n            <div className=\"code-name\">.icon-upload\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-warning\"></span>\r\n            <div className=\"name\">\r\n              warning\r\n            </div>\r\n            <div className=\"code-name\">.icon-warning\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-close-bold\"></span>\r\n            <div className=\"name\">\r\n              close-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-close-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-down-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-minus-bold\"></span>\r\n            <div className=\"name\">\r\n              minus-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-minus-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-select-bold\"></span>\r\n            <div className=\"name\">\r\n              select-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-select-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-down-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-left-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-left-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-left-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-clock-filling\"></span>\r\n            <div className=\"name\">\r\n              clock-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-clock-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-delete-filling\"></span>\r\n            <div className=\"name\">\r\n              delete-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-delete-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-favorite-filling\"></span>\r\n            <div className=\"name\">\r\n              favorite-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-favorite-filling\r\n            </div>\r\n          </li>\r\n          \r\n        </ul>\r\n      </div>\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default ButtonPage","F:\\react\\ts-react\\src\\site\\pages\\Grid.tsx",["229","230","231"],"F:\\react\\ts-react\\src\\components\\Grid\\index.tsx",["232","233"],"import React,{useEffect, useState} from 'react';\r\nimport {initData,getGutter,getResponsiveGrid} from './hook'\r\nimport classNames from 'classnames';\r\nimport {ThemeContext} from '../../App'\r\ninterface IRow{\r\n    gutter?:any;\r\n    align?:'top' | 'middle' | 'bottom';\r\n    justify?:'start' | 'end' | 'center' | 'space-around' | 'space-between';\r\n    wrap?:boolean;\r\n    children:any;\r\n    style?:object;\r\n}\r\ninterface ICol{\r\n    span?:number;\r\n    order?:number;\r\n    flex?:string | number;\r\n    offset?:number;\r\n    style?:object;\r\n    xs?:number|object;\r\n    sm?:number|object;\r\n    md?:number|object;\r\n    lg?:number|object;\r\n    xl?:number|object;\r\n    xxl?:number|object;\r\n}\r\n\r\nconst Row:React.FC<IRow> = (props)=>{\r\n    const { gutter, justify=\"start\", align=\"top\", style={} } = props\r\n    const [offsetWidth,setOffetWidth] = useState(document.body.offsetWidth)\r\n    const [gridData,setGridData] = useState(initData(props.children,offsetWidth,gutter))\r\n    const fn = ()=>{\r\n        setOffetWidth(document.body.offsetWidth)\r\n        removeListener()\r\n    }\r\n    const addListener = ()=>{\r\n        window.addEventListener(\"resize\",fn)\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener(\"resize\",fn);\r\n    }\r\n    useEffect(()=>{\r\n        addListener()\r\n        setGridData(gridData.map((item:any)=>{\r\n            const {xs, sm, md, lg, xl,xxl}=item.responsive\r\n            const res = getResponsiveGrid(offsetWidth,item.responsive) || { span:item.span,offset:item.offset,order:item.order }\r\n            if(xs || sm || md || lg || xl || xxl){\r\n                return {\r\n                    ...item,\r\n                    span:res.span,\r\n                    offset:res.offset,\r\n                }\r\n            }\r\n            if(Object.prototype.toString.call(gutter) === '[object Object]'){\r\n                return {...item,gutter:getGutter(gutter,offsetWidth)}\r\n            }  \r\n            return item\r\n        }))\r\n    },[offsetWidth])\r\n    \r\n    //console.log(gutter,gridData)\r\n    let row_classes = classNames(\"sxd-row\",{\r\n        [`sxd-row-${justify}`]:justify,\r\n        [`sxd-row-${align}`]:align\r\n    })\r\n    return (\r\n        <div className={row_classes} style={style}>\r\n            { gridData.map((item:any,index:number)=>{\r\n                let col_classes = classNames(\"sxd-col\",{\r\n                    \"gutter-row\":item.gutter,\r\n                    [`sxd-col-${item.span}`]:item.span,\r\n                    [`sxd-col-offset-${item.offset}`]:item.offset,\r\n                    [item.justify]:item.justify,\r\n                    [item.align]:item.align\r\n                })\r\n                const gutter = item.gutter ? {padding:`${item.gutter.vertical!==0?item.gutter.vertical/2:0}px ${item.gutter.horizontal!==0?item.gutter.horizontal/2:0}px`} : {}\r\n                const flex = item.flex ? {flex:item.flex} : {}\r\n                const order = item.order ? {order:item.order} : {}\r\n                let style = Object.assign({},gutter,flex,order,item.style)\r\n                return (<div key={index} className={col_classes} style={style}>{item.node}</div>)\r\n            }) }\r\n        </div>\r\n    )\r\n}\r\nconst Col:React.FC<ICol> = ()=>{\r\n    return (<></>)\r\n}\r\nexport { Row,Col }","F:\\react\\ts-react\\src\\components\\Grid\\hook.tsx",[],"F:\\react\\ts-react\\src\\components\\Divider\\index.tsx",["234","235"],"import React,{useEffect, useState} from 'react';\r\nimport classNames from 'classnames';\r\ninterface IDivider{\r\n    orientation?:\"left\" | \"right\" | \"middle\";\r\n    dashed?:boolean;\r\n    children?:any;\r\n}\r\nconst Divider:React.FC<IDivider> = (props:IDivider)=>{\r\n    const { orientation, dashed, children } = props\r\n    const classes = classNames(\"sxd-divider\",{\r\n        \"sxd-divider-dashed\":dashed,\r\n        \"sxd-divider-with-text\":orientation,\r\n        [`sxd-divider-with-text-${orientation}`]:orientation\r\n    })\r\n    const dividerContent=()=>{\r\n        if(children){\r\n            return (\r\n                <span className=\"sxd-divider-inner-text\">{children}</span>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes}>\r\n            {dividerContent()}\r\n        </div>\r\n    )\r\n}\r\nexport default Divider","F:\\react\\ts-react\\src\\site\\pages\\Divider.tsx",["236","237","238","239","240"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nimport Divider from '../../components/Divider'\r\nimport {Row,Col} from '../../components/Grid'\r\nconst DividerPage:React.FC = ()=>{ \r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Divider分割线</h1>\r\n        <p>区隔内容的分割线</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>对不同章节的文本段落进行分割。</p>\r\n                </li>\r\n                <li>\r\n                    <p>对行内文字/链接进行分割，例如表格的操作列。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const items:Icontent[]=[\r\n//span\r\n        {\r\n            id:1, \r\n            demo:<div>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider />\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider dashed />\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                </div>, \r\n            title:\"水平分割线\",\r\n            description:`默认为水平分割线，可在中间加入文字。`,\r\n            code:\r\n`\r\nimport { Divider } from 'sxdui';\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider />\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider dashed />\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n`\r\n        },\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider orientation=\"middle\">Text</Divider>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider orientation=\"left\">Left Text</Divider>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider orientation=\"right\">Right Text</Divider>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                </div>, \r\n            title:\"带文字的分割线\",\r\n            description:`分割线中带有文字，可以用 orientation 指定文字位置。`,\r\n            code:\r\n`\r\nimport { Divider } from 'sxdui';\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider orientation=\"middle\">Text</Divider>\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider orientation=\"left\">Left Text</Divider>\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider orientation=\"right\">Right Text</Divider>\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n`\r\n        }\r\n    ]\r\n    const data = [\r\n        {\r\n            key:1,\r\n            arguments: 'dashed',\r\n            brief: \"是否虚线\",\r\n            type: 'boolean',\r\n            default:\"false\"\r\n          },\r\n          {\r\n            key:2,\r\n            arguments: 'orientation',\r\n            brief: \"分割线标题的位置\",\r\n            type: 'left | right | center',\r\n            default:\"-\"\r\n          },\r\n    ]\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Api</h2>\r\n            <Table data={data} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default DividerPage","F:\\react\\ts-react\\src\\site\\pages\\Checkbox.tsx",["241","242","243","244","245"],"F:\\react\\ts-react\\src\\site\\pages\\Radio.tsx",["246","247","248","249","250"],"F:\\react\\ts-react\\src\\components\\Checkbox\\index.tsx",["251","252","253","254","255","256"],"F:\\react\\ts-react\\src\\site\\pages\\Table.tsx",["257","258","259","260","261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":10,"column":11,"nodeType":"268","messageId":"269","endLine":10,"endColumn":13},{"ruleId":"266","severity":1,"message":"270","line":4,"column":12,"nodeType":"268","messageId":"269","endLine":4,"endColumn":20},{"ruleId":"266","severity":1,"message":"271","line":9,"column":14,"nodeType":"268","messageId":"269","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"273","line":15,"column":26,"nodeType":"274","endLine":15,"endColumn":51},{"ruleId":"275","severity":1,"message":"276","line":12,"column":7,"nodeType":"268","endLine":12,"endColumn":11},{"ruleId":"275","severity":1,"message":"277","line":12,"column":7,"nodeType":"268","endLine":12,"endColumn":11,"suggestions":"278"},{"ruleId":"262","replacedBy":"279"},{"ruleId":"264","replacedBy":"280"},{"ruleId":"266","severity":1,"message":"281","line":33,"column":12,"nodeType":"268","messageId":"269","endLine":33,"endColumn":16},{"ruleId":"266","severity":1,"message":"282","line":1,"column":15,"nodeType":"268","messageId":"269","endLine":1,"endColumn":23},{"ruleId":"266","severity":1,"message":"283","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":17},{"ruleId":"266","severity":1,"message":"284","line":16,"column":15,"nodeType":"268","messageId":"269","endLine":16,"endColumn":28},{"ruleId":"275","severity":1,"message":"285","line":32,"column":11,"nodeType":"286","endLine":32,"endColumn":21,"suggestions":"287"},{"ruleId":"266","severity":1,"message":"282","line":1,"column":15,"nodeType":"268","messageId":"269","endLine":1,"endColumn":23},{"ruleId":"266","severity":1,"message":"288","line":1,"column":24,"nodeType":"268","messageId":"269","endLine":1,"endColumn":33},{"ruleId":"289","severity":1,"message":"290","line":20,"column":32,"nodeType":"291","messageId":"292","endLine":20,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":8,"column":17,"nodeType":"274","endLine":8,"endColumn":33},{"ruleId":"272","severity":1,"message":"273","line":9,"column":21,"nodeType":"274","endLine":9,"endColumn":59},{"ruleId":"266","severity":1,"message":"282","line":1,"column":15,"nodeType":"268","messageId":"269","endLine":1,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":13},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"275","severity":1,"message":"276","line":10,"column":7,"nodeType":"268","endLine":10,"endColumn":11},{"ruleId":"275","severity":1,"message":"297","line":10,"column":7,"nodeType":"268","endLine":10,"endColumn":11,"suggestions":"298"},{"ruleId":"266","severity":1,"message":"299","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"300","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":12},{"ruleId":"266","severity":1,"message":"301","line":28,"column":12,"nodeType":"268","messageId":"269","endLine":28,"endColumn":19},{"ruleId":"266","severity":1,"message":"302","line":28,"column":20,"nodeType":"268","messageId":"269","endLine":28,"endColumn":30},{"ruleId":"266","severity":1,"message":"303","line":29,"column":11,"nodeType":"268","messageId":"269","endLine":29,"endColumn":22},{"ruleId":"266","severity":1,"message":"304","line":70,"column":12,"nodeType":"268","messageId":"269","endLine":70,"endColumn":22},{"ruleId":"266","severity":1,"message":"305","line":70,"column":23,"nodeType":"268","messageId":"269","endLine":70,"endColumn":36},{"ruleId":"306","severity":1,"message":"307","line":102,"column":48,"nodeType":"308","messageId":"309","endLine":102,"endColumn":50},{"ruleId":"306","severity":1,"message":"307","line":107,"column":48,"nodeType":"308","messageId":"309","endLine":107,"endColumn":50},{"ruleId":"275","severity":1,"message":"310","line":112,"column":7,"nodeType":"286","endLine":112,"endColumn":21,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":209,"column":29,"nodeType":"314","messageId":"315","endLine":209,"endColumn":47},{"ruleId":"266","severity":1,"message":"288","line":1,"column":25,"nodeType":"268","messageId":"269","endLine":1,"endColumn":34},{"ruleId":"266","severity":1,"message":"316","line":4,"column":9,"nodeType":"268","messageId":"269","endLine":4,"endColumn":15},{"ruleId":"266","severity":1,"message":"317","line":5,"column":10,"nodeType":"268","messageId":"269","endLine":5,"endColumn":15},{"ruleId":"266","severity":1,"message":"318","line":23,"column":58,"nodeType":"268","messageId":"269","endLine":23,"endColumn":70},{"ruleId":"319","severity":1,"message":"320","line":39,"column":9,"nodeType":"321","messageId":"322","endLine":39,"endColumn":41,"fix":"323"},{"ruleId":"266","severity":1,"message":"324","line":122,"column":29,"nodeType":"268","messageId":"269","endLine":122,"endColumn":34},{"ruleId":"266","severity":1,"message":"282","line":2,"column":15,"nodeType":"268","messageId":"269","endLine":2,"endColumn":23},{"ruleId":"266","severity":1,"message":"299","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"325","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":13},{"ruleId":"266","severity":1,"message":"326","line":39,"column":11,"nodeType":"268","messageId":"269","endLine":39,"endColumn":15},{"ruleId":"266","severity":1,"message":"327","line":84,"column":12,"nodeType":"268","messageId":"269","endLine":84,"endColumn":19},{"ruleId":"266","severity":1,"message":"282","line":2,"column":15,"nodeType":"268","messageId":"269","endLine":2,"endColumn":23},{"ruleId":"266","severity":1,"message":"299","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"300","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":12},{"ruleId":"266","severity":1,"message":"328","line":4,"column":9,"nodeType":"268","messageId":"269","endLine":4,"endColumn":21},{"ruleId":"275","severity":1,"message":"329","line":58,"column":7,"nodeType":"286","endLine":58,"endColumn":20,"suggestions":"330"},{"ruleId":"266","severity":1,"message":"288","line":1,"column":15,"nodeType":"268","messageId":"269","endLine":1,"endColumn":24},{"ruleId":"266","severity":1,"message":"282","line":1,"column":26,"nodeType":"268","messageId":"269","endLine":1,"endColumn":34},{"ruleId":"266","severity":1,"message":"282","line":2,"column":15,"nodeType":"268","messageId":"269","endLine":2,"endColumn":23},{"ruleId":"266","severity":1,"message":"299","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"300","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":12},{"ruleId":"266","severity":1,"message":"331","line":8,"column":9,"nodeType":"268","messageId":"269","endLine":8,"endColumn":12},{"ruleId":"266","severity":1,"message":"332","line":8,"column":13,"nodeType":"268","messageId":"269","endLine":8,"endColumn":16},{"ruleId":"266","severity":1,"message":"316","line":5,"column":9,"nodeType":"268","messageId":"269","endLine":5,"endColumn":15},{"ruleId":"266","severity":1,"message":"333","line":5,"column":16,"nodeType":"268","messageId":"269","endLine":5,"endColumn":22},{"ruleId":"266","severity":1,"message":"300","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":12},{"ruleId":"266","severity":1,"message":"334","line":30,"column":12,"nodeType":"268","messageId":"269","endLine":30,"endColumn":20},{"ruleId":"266","severity":1,"message":"335","line":30,"column":21,"nodeType":"268","messageId":"269","endLine":30,"endColumn":32},{"ruleId":"266","severity":1,"message":"299","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"300","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":12},{"ruleId":"266","severity":1,"message":"301","line":28,"column":12,"nodeType":"268","messageId":"269","endLine":28,"endColumn":19},{"ruleId":"266","severity":1,"message":"302","line":28,"column":20,"nodeType":"268","messageId":"269","endLine":28,"endColumn":30},{"ruleId":"266","severity":1,"message":"303","line":29,"column":11,"nodeType":"268","messageId":"269","endLine":29,"endColumn":22},{"ruleId":"266","severity":1,"message":"333","line":12,"column":11,"nodeType":"268","messageId":"269","endLine":12,"endColumn":17},{"ruleId":"275","severity":1,"message":"336","line":36,"column":7,"nodeType":"286","endLine":36,"endColumn":16,"suggestions":"337"},{"ruleId":"266","severity":1,"message":"338","line":65,"column":33,"nodeType":"268","messageId":"269","endLine":65,"endColumn":41},{"ruleId":"275","severity":1,"message":"339","line":106,"column":7,"nodeType":"286","endLine":106,"endColumn":20,"suggestions":"340"},{"ruleId":"306","severity":1,"message":"307","line":109,"column":28,"nodeType":"308","messageId":"309","endLine":109,"endColumn":30},{"ruleId":"275","severity":1,"message":"341","line":115,"column":7,"nodeType":"286","endLine":115,"endColumn":14,"suggestions":"342"},{"ruleId":"266","severity":1,"message":"282","line":2,"column":15,"nodeType":"268","messageId":"269","endLine":2,"endColumn":23},{"ruleId":"266","severity":1,"message":"299","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"316","line":5,"column":9,"nodeType":"268","messageId":"269","endLine":5,"endColumn":15},{"ruleId":"266","severity":1,"message":"333","line":5,"column":16,"nodeType":"268","messageId":"269","endLine":5,"endColumn":22},{"ruleId":"266","severity":1,"message":"300","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":12},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"@typescript-eslint/no-unused-vars","'Ir' is defined but never used.","Identifier","unusedVar","'inputVal' is assigned a value but never used.","'test' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["345"],["343"],["344"],"'rest' is assigned a value but never used.","'useState' is defined but never used.","'routeInfo' is defined but never used.","'Active' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'changeToAny'. Either include it or remove the dependency array.","ArrayExpression",["346"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Index' is defined but never used.","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.",["347"],"'Button' is defined but never used.","'Icon' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'valueChange' is assigned a value but never used.","'iconRotate' is assigned a value but never used.","'setIconRotate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'mode' and 'onChange'. Either include them or remove the dependency array.",["348"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Select' is defined but never used.","'clear' is defined but never used.","'defaultValue' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"sxd-input-wrap-focus\"] found.","Property","unnecessarilyComputedProperty",{"range":"349","text":"350"},"'style' is assigned a value but never used.","'Table' is defined but never used.","'data' is assigned a value but never used.","'columns' is assigned a value but never used.","'ThemeContext' is defined but never used.","React Hook useEffect has missing dependencies: 'addListener', 'gridData', and 'gutter'. Either include them or remove the dependency array. You can also do a functional update 'setGridData(g => ...)' if you only need 'gridData' in the 'setGridData' call.",["351"],"'Row' is defined but never used.","'Col' is defined but never used.","'Option' is defined but never used.","'checked2' is assigned a value but never used.","'setChecked2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isDisabled'. Either include it or remove the dependency array.",["352"],"'disabled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initData'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has missing dependencies: 'data' and 'onChange'. Either include them or remove the dependency array.",["354"],"no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},[1268,1292],"\"sxd-input-wrap-focus\"",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},"Update the dependencies array to be: [url]",{"range":"371","text":"372"},"Update the dependencies array to be: [changeToAny, children]",{"range":"373","text":"374"},"Update the dependencies array to be: [width]",{"range":"375","text":"376"},"Update the dependencies array to be: [mode, onChange, selectedInfo]",{"range":"377","text":"378"},"Update the dependencies array to be: [addListener, gridData, gutter, offsetWidth]",{"range":"379","text":"380"},"Update the dependencies array to be: [checked, isDisabled]",{"range":"381","text":"382"},"Update the dependencies array to be: [exportvalue, initData]",{"range":"383","text":"384"},"Update the dependencies array to be: [click, data, onChange]",{"range":"385","text":"386"},[379,383],"[url]",[1229,1239],"[changeToAny, children]",[395,399],"[width]",[3215,3229],"[mode, onChange, selectedInfo]",[1946,1959],"[addListener, gridData, gutter, offsetWidth]",[961,970],"[checked, isDisabled]",[3314,3327],"[exportvalue, initData]",[3528,3535],"[click, data, onChange]"]